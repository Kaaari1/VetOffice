// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VetOffice.Models;

#nullable disable

namespace VetApp.Migrations
{
    [DbContext(typeof(VetOfficeDbContext))]
    [Migration("20230522162251_Initial Create2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("VetOffice.Models.Animals", b =>
                {
                    b.Property<int>("id_animal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateofbirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("id_user")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name_a")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("id_animal");

                    b.HasIndex("id_user");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("VetOffice.Models.Doctors", b =>
                {
                    b.Property<int>("id_doctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_user")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_doctor");

                    b.HasIndex("id_user");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("VetOffice.Models.Presence", b =>
                {
                    b.Property<int>("id_doctor")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("nworking_days")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("work_hours")
                        .HasColumnType("TEXT");

                    b.HasKey("id_doctor");

                    b.ToTable("Presen");
                });

            modelBuilder.Entity("VetOffice.Models.Roles", b =>
                {
                    b.Property<int>("id_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("id_role");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("VetOffice.Models.Users", b =>
                {
                    b.Property<int>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("id_user");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VetOffice.Models.Users_login", b =>
                {
                    b.Property<int>("id_user")
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("id_role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("id_user");

                    b.HasIndex("id_role");

                    b.ToTable("Users_Logins");
                });

            modelBuilder.Entity("VetOffice.Models.Visits", b =>
                {
                    b.Property<int>("id_visit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<int>("id_animal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_doctor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_user")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_visit");

                    b.HasIndex("id_animal");

                    b.HasIndex("id_doctor");

                    b.HasIndex("id_user");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("VetOffice.Models.Animals", b =>
                {
                    b.HasOne("VetOffice.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VetOffice.Models.Doctors", b =>
                {
                    b.HasOne("VetOffice.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VetOffice.Models.Presence", b =>
                {
                    b.HasOne("VetOffice.Models.Doctors", "Doctor")
                        .WithMany()
                        .HasForeignKey("id_doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("VetOffice.Models.Users_login", b =>
                {
                    b.HasOne("VetOffice.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("id_role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetOffice.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VetOffice.Models.Visits", b =>
                {
                    b.HasOne("VetOffice.Models.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("id_animal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetOffice.Models.Doctors", "Doctor")
                        .WithMany()
                        .HasForeignKey("id_doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetOffice.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
